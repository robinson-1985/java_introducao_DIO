                SRP — Single Responsibility Principle

Princípio da Responsabilidade Única — Uma classe deve ter um, e somente um, 
motivo para mudar.

Esse princípio declara que uma classe deve ser especializada em um único 
assunto e possuir apenas uma responsabilidade dentro do software, ou seja, 
a classe deve ter uma única tarefa ou ação para executar.

Quando estamos aprendendo programação orientada a objetos, sem sabermos, 
damos a uma classe mais de uma responsabilidade e acabamos criando classes 
que fazem de tudo — God Class*. Num primeiro momento isso pode parecer 
eficiente, mas como as responsabilidades acabam se misturando, quando há 
necessidade de realizar alterações nessa classe, será difícil modificar 
uma dessas responsabilidades sem comprometer as outras. Toda alteração 
acaba sendo introduzida com um certo nível de incerteza em nosso sistema
— principalmente se não existirem testes automatizados!

*God Class — Classe Deus: Na programação orientada a objetos, é uma classe 
que sabe demais ou faz demais.